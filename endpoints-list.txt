Эндпоинты продуктов:
1. Получение списка продуктов (GET /products):
   - Возвращает список всех доступных продуктов в магазине.
   - Может поддерживать пагинацию или фильтрацию для управления объемом данных.

2. Получение информации о конкретном продукте (GET /products/{id}):
   - Возвращает подробную информацию о продукте на основе указанного идентификатора (`id`).
   - Может включать информацию о наличии, цене, описании и других свойствах продукта.

3. Добавление нового продукта (POST /products):
   - Создает новый продукт на основе предоставленных данных.
   - Может включать поля, такие как название продукта, описание, цена, количество на складе и т.д.

4. Обновление информации о продукте (PUT /products/{id}):
   - Обновляет информацию о продукте на основе указанного идентификатора (`id`).
   - Позволяет изменять любые свойства продукта, такие как название, описание, цена и т.д.

5. Удаление продукта (DELETE /products/{id}):
   - Удаляет продукт на основе указанного идентификатора (`id`).

6. Поиск продуктов (GET /products/search):
   - Позволяет выполнять поиск продуктов по заданным критериям, таким как ключевые слова, категории, фильтры и т.д.
   - Возвращает список продуктов, соответствующих заданным критериям.

7. Получение популярных продуктов (GET /products/popular ):
   - Возвращает список наиболее популярных продуктов, основываясь на их популярности или рейтинге.
   - Может использоваться для отображения рекомендаций или витрин наиболее популярных продуктов.

8. Получение продуктов по категории (GET /products/category/{categoryId}):
   - Возвращает список продуктов, относящихся к определенной категории, на основе указанного идентификатора категории (`categoryId`).
   - Позволяет организовать продукты по категориям, упрощая навигацию и фильтрацию.

9. Получение рекомендованных продуктов (GET /products/recommended):
   - Возвращает список рекомендованных продуктов на основе предпочтений пользователя, истории покупок или алгоритмов рекомендаций.
   - Позволяет предлагать персонализированные рекомендации покупателям.

10. Получение скидок и акций (GET /products/discounts):
    - Возвращает список продуктов со скидками, акциями или специальными предложениями.
    - Может использоваться для отображения актуальных скидок и привлечения внимания покупателей.

11. Получение связанных продуктов (GET /products/{id}/related):
    - Возвращает список связанных продуктов на основе указанного идентификатора продукта (`id`).
    - Может использоваться для отображения дополнительных продуктов, которые могут быть интересны покупателю.

12. Получение отзывов о продукте (GET /products/{id}/reviews):
    - Возвращает список отзывов, связанных с определенным продуктом на основе указанного идентификатора продукта (`id`).
    - Позволяет покупателям ознакомиться с отзывами других пользователей перед покупкой.



Эндпоинты заказов:
1. Создание заказа (POST /orders):
   - Создает новый заказ на основе предоставленных данных, таких как выбранные продукты, адрес доставки, информация о платеже и т.д.

2. Получение информации о заказе (GET /orders/{id}):
   - Возвращает подробную информацию о заказе на основе указанного идентификатора (`id`).

3. Получение истории заказов для конкретного пользователя (GET /orders?user={userId}):
   - Возвращает список заказов, связанных с указанным идентификатором пользователя (`userId`).

4. Обновление информации о заказе (PUT /orders/{id}):
   - Обновляет информацию о заказе на основе указанного идентификатора (`id`).
   - Позволяет изменять информацию о выбранных продуктах, адресе доставки, информации о платеже и т.д.

5. Отмена заказа (PUT /orders/{id}/cancel):
   - Отменяет заказ на основе указанного идентификатора (`id`).
   - Меняет статус заказа на "отменен" и может выполнять другие операции, связанные с отменой заказа, например, возврат средств.

6. Подтверждение заказа (PUT /orders/{id}/confirm):
   - Подтверждает заказ и изменяет его статус на "подтвержден".
   - Может выполнять дополнительные операции, связанные с обработкой заказа и подготовкой к доставке.

7. Получение списка всех заказов (GET /orders):
   - Возвращает список всех заказов в магазине.
   - Может поддерживать пагинацию или фильтрацию для управления объемом данных.

8. Получение заказов по статусу (GET /orders?status={status}):
   - Возвращает список заказов на основе указанного статуса.
   - Может использоваться для отображения заказов с определенным статусом, например, "в обработке", "выполнен" и т.д.

9. Получение статистики заказов (GET /orders/stats):
   - Возвращает статистическую информацию о заказах, такую как общее количество заказов, сумма продаж, средний чек и т.д.
   - Может быть полезным для анализа производительности и эффективности магазина.

10. Удаление заказа (DELETE /orders/{id}):
    - Удаляет заказ на основе указанного идентификатора (`id`).
    - Обычно требуется соответствующая системная авторизация для выполнения этой операции.



Эндпоинты для пользователей:
1. Регистрация нового пользователя (POST /users/register): Создает новую учетную запись пользователя.

2. Аутентификация пользователя (POST /users/login): Проверяет учетные данные пользователя и выдает токен аутентификации.

3. Получение профиля пользователя (GET /users/{id}): Возвращает информацию о профиле пользователя на основе идентификатора (id).

4. Обновление профиля пользователя (PUT /users/{id}): Обновляет информацию о профиле пользователя на основе указанного идентификатора (id).

5. Получение списка всех пользователей (GET /users):
   - Возвращает список всех зарегистрированных пользователей в магазине.
   - Может поддерживать пагинацию или фильтрацию для управления объемом данных.

6. Удаление пользователя (DELETE /users/{id}):
   - Удаляет пользователя на основе указанного идентификатора (id).
   - Обычно требуется соответствующая системная авторизация для выполнения этой операции.

7. Получение истории заказов пользователя (GET /users/{id}/orders):
   - Возвращает список заказов, связанных с указанным идентификатором пользователя (id).
   - Позволяет пользователям просматривать свою историю заказов.

8. Обновление пароля пользователя (PUT /users/{id}/password):
   - Обновляет пароль пользователя на основе указанного идентификатора (id).
   - Позволяет пользователям изменять свой пароль для повышения безопасности учетной записи.

9. Восстановление пароля (POST /users/reset-password):
   - Инициирует процесс восстановления пароля пользователя.
   - Может включать отправку ссылки для сброса пароля на зарегистрированный адрес электронной почты пользователя.

10. Получение адресов доставки пользователя (GET /users/{id}/addresses):
    - Возвращает список адресов доставки, связанных с указанным идентификатором пользователя (id).
    - Позволяет пользователям управлять своими сохраненными адресами доставки.

11. Добавление адреса доставки (POST /users/{id}/addresses):
    - Создает новый адрес доставки для указанного идентификатора пользователя (id).
    - Позволяет пользователям добавлять новые адреса доставки для удобства оформления заказов.

12. Обновление адреса доставки (PUT /users/{userId}/addresses/{addressId}):
    - Обновляет информацию о конкретном адресе доставки для указанного идентификатора пользователя (userId) и идентификатора адреса (addressId).
    - Позволяет пользователям изменять информацию о своих адресах доставки.



Эндпоинты для корзины покупок:
1. Добавление продукта в корзину (POST /cart/add): Добавляет выбранный продукт в корзину пользователя.

2. Получение содержимого корзины (GET /cart): Возвращает содержимое корзины пользователя.

3. Обновление количества продукта в корзине (PUT /cart/{productId}): Обновляет количество выбранного продукта в корзине.

4. Удаление продукта из корзины (DELETE /cart/{productId}): Удаляет выбранный продукт из корзины пользователя.

5. Очистка корзины (DELETE /cart):
   - Удаляет все продукты из корзины пользователя.
   - Позволяет пользователю очистить корзину перед началом нового сеанса покупок.

6. Применение купона или скидки (POST /cart/coupon):
   - Применяет купон или скидку к продуктам в корзине пользователя.
   - Рассчитывает и обновляет итоговую стоимость заказа с учетом примененной скидки.

7. Получение итоговой стоимости заказа (GET /cart/total):
   - Возвращает итоговую стоимость заказа в корзине пользователя.
   - Включает стоимость продуктов, доставку, налоги и другие применимые сборы.

8. Оформление заказа (POST /cart/checkout):
   - Оформляет заказ на основе содержимого корзины пользователя.
   - Создает заказ, обрабатывает информацию о доставке и платеже.

9. Добавление отзыва о продукте (POST /products/{productId}/reviews):
    - Добавляет отзыв о конкретном продукте на основе его идентификатора (productId).
    - Позволяет пользователям оставлять отзывы и оценки продуктов.

10. Получение рекомендаций по продуктам (GET /products/recommendations):
    - Возвращает персонализированные рекомендации по продуктам для пользователя.
    - Может основываться на истории покупок пользователя или других факторах.

11. Установка параметров доставки (PUT /cart/shipping):
   - Устанавливает параметры доставки для заказа в корзине пользователя.
   - Может включать адрес доставки, метод доставки, способ оплаты и другую связанную информацию.

12. Расчет стоимости доставки (GET /cart/shipping-cost):
   - Возвращает стоимость доставки для заказа в корзине пользователя.
   - Рассчитывает стоимость доставки на основе выбранного адреса доставки и других факторов.

13. Применение налогов (POST /cart/taxes):
   - Применяет налоги к продуктам в корзине пользователя.
   - Рассчитывает и обновляет итоговую стоимость заказа с учетом примененных налогов.

14. Получение информации о наличии товара (GET /products/{productId}/availability):
   - Возвращает информацию о наличии товара на основе его идентификатора (productId).
   - Позволяет пользователям проверить доступность товара перед добавлением в корзину.

15. Получение информации о заказе (GET /orders/{orderId}):
    - Возвращает информацию о конкретном заказе на основе его идентификатора (orderId).
    - Позволяет пользователям просматривать подробности своих заказов.

16. Отмена заказа (PUT /orders/{orderId}/cancel):
    - Отменяет заказ на основе его идентификатора (orderId).
    - Позволяет пользователям отменять заказы в определенных случаях.



Эндпоинты для оплаты товаров:
1. Создание платежа (POST /payments): Создает новую запись о платеже на основе предоставленных данных.

2. Подтверждение платежа (POST /payments/confirm): Подтверждает выполнение платежа и обновляет его статус.

3. Получение информации о платеже (GET /payments/{paymentId}):
   - Возвращает информацию о конкретном платеже на основе его идентификатора (paymentId).
   - Позволяет пользователям просматривать подробности своих платежей.

4. Отмена платежа (PUT /payments/{paymentId}/cancel):
   - Отменяет платеж на основе его идентификатора (paymentId).
   - Позволяет пользователям отменять платежи в определенных случаях.

5. Возврат средств (POST /payments/{paymentId}/refund):
   - Создает запрос на возврат средств для определенного платежа на основе его идентификатора (paymentId).
   - Инициирует процесс возврата средств пользователю.

6. Получение истории платежей пользователя (GET /users/{userId}/payments):
   - Возвращает историю платежей пользователя на основе его идентификатора (userId).
   - Позволяет пользователям просматривать свою историю платежей и отслеживать их статусы.

7. Оплата с помощью различных методов (POST /payments/methods):
   - Предоставляет список доступных методов оплаты для данного заказа или пользователя.
   - Позволяет пользователям выбрать предпочитаемый метод оплаты из предложенных вариантов.

8. Подтверждение доставки (POST /payments/{paymentId}/delivery-confirmation):
   - Подтверждает доставку товара и завершает процесс платежа на основе его идентификатора (paymentId).
   - Может использоваться для активации определенных действий, связанных с успешной доставкой.

